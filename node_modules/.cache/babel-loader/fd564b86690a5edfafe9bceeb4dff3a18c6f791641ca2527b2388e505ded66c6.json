{"ast":null,"code":"var _jsxFileName = \"C:\\\\AndroidStudio\\\\React_native\\\\proyecto-cursos\\\\src\\\\Aboutheader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Abouttable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackIcons = ({\n  data\n}) => {\n  if (!Array.isArray(data)) {\n    console.error('Expected an array for stack data');\n    return null;\n  }\n  const icons = data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-item\",\n    children: item\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-icons\",\n    children: icons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n// Componente Card\n_c = StackIcons;\nconst AboutCard = ({\n  Titulo,\n  image,\n  stack,\n  descripcion,\n  button,\n  isActive // Añadido para determinar si la tarjeta está activa\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDescription = () => {\n    setIsOpen(!isOpen);\n  };\n  const style = {\n    img: {\n      maxWidth: \"400px\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-item ${isActive ? 'active' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card hoverable\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image waves-effect waves-block waves-light\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: style.img,\n          className: \"activator\",\n          src: image,\n          alt: Titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(StackIcons, {\n            data: stack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-title grey-text text-darken-4\",\n          children: Titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `card-description ${isOpen ? 'open' : ''}`,\n          children: descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/new-page\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"more-info\",\n          children: button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AboutCard, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c2 = AboutCard;\nAboutCard.propTypes = {\n  Titulo: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.string).isRequired,\n  descripcion: PropTypes.string.isRequired,\n  button: PropTypes.string.isRequired,\n  isActive: PropTypes.bool // Añadido para manejar la tarjeta activa\n};\nexport default AboutCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StackIcons\");\n$RefreshReg$(_c2, \"AboutCard\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","StackIcons","data","Array","isArray","console","error","icons","map","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AboutCard","Titulo","image","stack","descripcion","button","isActive","_s","isOpen","setIsOpen","toggleDescription","style","img","maxWidth","src","alt","href","target","rel","_c2","propTypes","string","isRequired","arrayOf","bool","$RefreshReg$"],"sources":["C:/AndroidStudio/React_native/proyecto-cursos/src/Aboutheader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Abouttable.css';\r\n\r\nconst StackIcons = ({ data }) => {\r\n  if (!Array.isArray(data)) {\r\n    console.error('Expected an array for stack data');\r\n    return null;\r\n  }\r\n\r\n  const icons = data.map((item) => (\r\n    <div key={item} className=\"stack-item\">\r\n      {item}\r\n    </div>\r\n  ));\r\n  return <div className=\"stack-icons\">{icons}</div>;\r\n};\r\n\r\n// Componente Card\r\nconst AboutCard = ({\r\n  Titulo,\r\n  image,\r\n  stack,\r\n  descripcion,\r\n  button,\r\n  isActive // Añadido para determinar si la tarjeta está activa\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDescription = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const style = {\r\n    img: {\r\n      maxWidth: \"400px\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`card-item ${isActive ? 'active' : ''}`}>\r\n      <div className=\"card hoverable\">\r\n        <div className=\"card-image waves-effect waves-block waves-light\">\r\n          <img style={style.img} className=\"activator\" src={image} alt={Titulo} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div>\r\n            <StackIcons data={stack} />\r\n          </div>\r\n          <span className=\"card-title grey-text text-darken-4\">\r\n            {Titulo}\r\n          </span>\r\n          <p className={`card-description ${isOpen ? 'open' : ''}`}>{descripcion}</p>\r\n          <a href=\"/new-page\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"more-info\">\r\n            {button}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAboutCard.propTypes = {\r\n  Titulo: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  stack: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  descripcion: PropTypes.string.isRequired,\r\n  button: PropTypes.string.isRequired,\r\n  isActive: PropTypes.bool // Añadido para manejar la tarjeta activa\r\n};\r\n\r\nexport default AboutCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}